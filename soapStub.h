/* soapStub.h
   Generated by gSOAP 2.8.96 for face.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/


#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20896
# error "GSOAP VERSION 20896 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct ns__SingleFaceInfo;	/* face.h:5 */
struct FaceRes;	/* face.h:13 */
struct ns__FaceDetectByImgpathResponse;	/* face.h:17 */
struct ns__FaceDetectByImgpath;	/* face.h:17 */
struct ns__FaceDetectByBase64Response;	/* face.h:18 */
struct ns__FaceDetectByBase64;	/* face.h:18 */

/* face.h:5 */
#ifndef SOAP_TYPE_ns__SingleFaceInfo
#define SOAP_TYPE_ns__SingleFaceInfo (7)
/* complex XML schema type 'ns:SingleFaceInfo': */
struct SOAP_CMAC ns__SingleFaceInfo {
      public:
        /** Required element 'x1' of XML schema type 'xsd:float' */
        float x1;
        /** Required element 'y1' of XML schema type 'xsd:float' */
        float y1;
        /** Required element 'x2' of XML schema type 'xsd:float' */
        float x2;
        /** Required element 'y2' of XML schema type 'xsd:float' */
        float y2;
        /** Required element 'score' of XML schema type 'xsd:float' */
        float score;
        /** Required element 'landmarks' of XML schema type 'Array10Offloat' */
        float landmarks[10];
      public:
        /** Return unique type id SOAP_TYPE_ns__SingleFaceInfo */
        long soap_type() const { return SOAP_TYPE_ns__SingleFaceInfo; }
        /** Constructor with member initializations */
        ns__SingleFaceInfo() : x1(), y1(), x2(), y2(), score(), landmarks() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__SingleFaceInfo * SOAP_FMAC2 soap_instantiate_ns__SingleFaceInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* face.h:13 */
#ifndef SOAP_TYPE_FaceRes
#define SOAP_TYPE_FaceRes (10)
/* complex XML schema type 'FaceRes': */
struct SOAP_CMAC FaceRes {
      public:
        /** Sequence of elements 'item' of XML schema type 'ns:SingleFaceInfo' stored in dynamic array __ptr of length __size */
        int __size;
        struct ns__SingleFaceInfo **__ptr;
      public:
        /** Return unique type id SOAP_TYPE_FaceRes */
        long soap_type() const { return SOAP_TYPE_FaceRes; }
        /** Constructor with member initializations */
        FaceRes() : __size(), __ptr() { }
        /** Friend allocator */
        friend SOAP_FMAC1 FaceRes * SOAP_FMAC2 soap_instantiate_FaceRes(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* face.h:17 */
#ifndef SOAP_TYPE_ns__FaceDetectByImgpathResponse
#define SOAP_TYPE_ns__FaceDetectByImgpathResponse (16)
/* complex XML schema type 'ns:FaceDetectByImgpathResponse': */
struct SOAP_CMAC ns__FaceDetectByImgpathResponse {
      public:
        /** Optional element 'face-res' of XML schema type 'FaceRes' */
        struct FaceRes *face_res;
      public:
        /** Return unique type id SOAP_TYPE_ns__FaceDetectByImgpathResponse */
        long soap_type() const { return SOAP_TYPE_ns__FaceDetectByImgpathResponse; }
        /** Constructor with member initializations */
        ns__FaceDetectByImgpathResponse() : face_res() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__FaceDetectByImgpathResponse * SOAP_FMAC2 soap_instantiate_ns__FaceDetectByImgpathResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* face.h:17 */
#ifndef SOAP_TYPE_ns__FaceDetectByImgpath
#define SOAP_TYPE_ns__FaceDetectByImgpath (17)
/* complex XML schema type 'ns:FaceDetectByImgpath': */
struct SOAP_CMAC ns__FaceDetectByImgpath {
      public:
        /** Required element 'img-path' of XML schema type 'xsd:string' */
        std::string img_path;
      public:
        /** Return unique type id SOAP_TYPE_ns__FaceDetectByImgpath */
        long soap_type() const { return SOAP_TYPE_ns__FaceDetectByImgpath; }
        /** Constructor with member initializations */
        ns__FaceDetectByImgpath() : img_path() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__FaceDetectByImgpath * SOAP_FMAC2 soap_instantiate_ns__FaceDetectByImgpath(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* face.h:18 */
#ifndef SOAP_TYPE_ns__FaceDetectByBase64Response
#define SOAP_TYPE_ns__FaceDetectByBase64Response (19)
/* complex XML schema type 'ns:FaceDetectByBase64Response': */
struct SOAP_CMAC ns__FaceDetectByBase64Response {
      public:
        /** Optional element 'face-res' of XML schema type 'FaceRes' */
        struct FaceRes *face_res;
      public:
        /** Return unique type id SOAP_TYPE_ns__FaceDetectByBase64Response */
        long soap_type() const { return SOAP_TYPE_ns__FaceDetectByBase64Response; }
        /** Constructor with member initializations */
        ns__FaceDetectByBase64Response() : face_res() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__FaceDetectByBase64Response * SOAP_FMAC2 soap_instantiate_ns__FaceDetectByBase64Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* face.h:18 */
#ifndef SOAP_TYPE_ns__FaceDetectByBase64
#define SOAP_TYPE_ns__FaceDetectByBase64 (20)
/* complex XML schema type 'ns:FaceDetectByBase64': */
struct SOAP_CMAC ns__FaceDetectByBase64 {
      public:
        /** Required element 'img-base64' of XML schema type 'xsd:string' */
        std::string img_base64;
      public:
        /** Return unique type id SOAP_TYPE_ns__FaceDetectByBase64 */
        long soap_type() const { return SOAP_TYPE_ns__FaceDetectByBase64; }
        /** Constructor with member initializations */
        ns__FaceDetectByBase64() : img_base64() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__FaceDetectByBase64 * SOAP_FMAC2 soap_instantiate_ns__FaceDetectByBase64(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* face.h:22 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (21)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* face.h:22 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (22)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* face.h:22 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (24)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* face.h:22 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (27)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* face.h:22 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (28)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* float has binding name 'float' for type 'xsd:float' */
#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (8)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (13)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (28)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (27)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (24)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (22)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (21)
#endif

/* struct ns__FaceDetectByBase64 has binding name 'ns__FaceDetectByBase64' for type 'ns:FaceDetectByBase64' */
#ifndef SOAP_TYPE_ns__FaceDetectByBase64
#define SOAP_TYPE_ns__FaceDetectByBase64 (20)
#endif

/* struct ns__FaceDetectByBase64Response has binding name 'ns__FaceDetectByBase64Response' for type 'ns:FaceDetectByBase64Response' */
#ifndef SOAP_TYPE_ns__FaceDetectByBase64Response
#define SOAP_TYPE_ns__FaceDetectByBase64Response (19)
#endif

/* struct ns__FaceDetectByImgpath has binding name 'ns__FaceDetectByImgpath' for type 'ns:FaceDetectByImgpath' */
#ifndef SOAP_TYPE_ns__FaceDetectByImgpath
#define SOAP_TYPE_ns__FaceDetectByImgpath (17)
#endif

/* struct ns__FaceDetectByImgpathResponse has binding name 'ns__FaceDetectByImgpathResponse' for type 'ns:FaceDetectByImgpathResponse' */
#ifndef SOAP_TYPE_ns__FaceDetectByImgpathResponse
#define SOAP_TYPE_ns__FaceDetectByImgpathResponse (16)
#endif

/* struct FaceRes has binding name 'FaceRes' for type 'FaceRes' */
#ifndef SOAP_TYPE_FaceRes
#define SOAP_TYPE_FaceRes (10)
#endif

/* struct ns__SingleFaceInfo has binding name 'ns__SingleFaceInfo' for type 'ns:SingleFaceInfo' */
#ifndef SOAP_TYPE_ns__SingleFaceInfo
#define SOAP_TYPE_ns__SingleFaceInfo (7)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (30)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (29)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (23)
#endif

/* struct FaceRes * has binding name 'PointerToFaceRes' for type 'FaceRes' */
#ifndef SOAP_TYPE_PointerToFaceRes
#define SOAP_TYPE_PointerToFaceRes (14)
#endif

/* struct ns__SingleFaceInfo ** has binding name 'PointerToPointerTons__SingleFaceInfo' for type 'ns:SingleFaceInfo' */
#ifndef SOAP_TYPE_PointerToPointerTons__SingleFaceInfo
#define SOAP_TYPE_PointerToPointerTons__SingleFaceInfo (12)
#endif

/* struct ns__SingleFaceInfo * has binding name 'PointerTons__SingleFaceInfo' for type 'ns:SingleFaceInfo' */
#ifndef SOAP_TYPE_PointerTons__SingleFaceInfo
#define SOAP_TYPE_PointerTons__SingleFaceInfo (11)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/* float * has binding name 'Array10Offloat' for type 'xsd:float' */
#ifndef SOAP_TYPE_Array10Offloat
#define SOAP_TYPE_Array10Offloat (9)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
